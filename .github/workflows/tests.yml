---
on: push

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]

      - name: Run pytest
        run: pytest . --ignore test/test_e2e.py

  e2e:
    runs-on: ubuntu-latest
    name: End to End testing
    steps:
      - uses: actions/checkout@v2

      - name: Create archive-like folder
        run: |
          sudo mkdir -p /archive/NDXMARI/Instrument/data/cycle_22_5/
          sudo touch /archive/NDXMARI/Instrument/data/cycle_22_5/MAR28503.nxs

      - name: Create ceph-like folder
        run: |
          sudo mkdir -p /ceph/MARI/RBNumber/RB0/autoreduced

      - name: Install and Start minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --kubernetes-version=1.25.6

      - name: Clone k8s repo
        uses: actions/checkout@v2
        with:
          repository: interactivereduction/k8s
          path: /home/runner/work/jobcontroller/jobcontroller/k8s

      - name: Deploy the k8s local cluster version using ansible
        run: |
          sudo apt-get update && sudo apt-get install ansible
          /opt/pipx/venvs/ansible-core/bin/python -m pip install kubernetes
          ansible-galaxy collection install kubernetes.core
          ansible-playbook /home/runner/work/jobcontroller/jobcontroller/k8s/ansible/deploy-dev-k8s-services.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./container/jobcontroller.D
          push: true
          tags: ghcr.io/interactivereduction/jobcontroller-test

      - name: Push new container image to the kubernetes cluster
        run: |
          kubectl set image -n ir deployment/jobcontroller jobcontroller=ghcr.io/interactivereduction/jobcontroller-test@sha256:${{ github.sha }}

      - name: Wait for kafka to exist
        run: |
          while true; do
            if kubectl get service kafka-cluster-kafka-external-bootstrap -n kafka > /dev/null 2>&1; then
              echo "Service kafka-cluster-kafka-external-bootstrap exists"
              break
            else
              echo "Waiting for service kafka-cluster-kafka-external-bootstrap to exist"
              sleep 5
            fi
          done

      - name: Run e2e test
        run: |
          minikube mount "/archive:/archive" &
          minikube mount "/ceph:/ceph" &
          python -m pip install --upgrade pip
          python -m pip install .[test]
          set KAFKA_NODE_PORT $(kubectl get service -n kafka kafka-cluster-kafka-external-bootstrap -o=jsonpath='{.spec.ports[0].nodePort}{"\n"}')
          set KAFKA_NODE_IP $(kubectl get node minikube -o=jsonpath='{range .status.addresses[*]}{.type}{"\t"}{.address}{"\n"}')
          echo "Kafka IP is: $KAFKA_NODE_IP:$KAFKA_NODE_PORT"
          KAFKA_IP=$KAFKA_NODE_IP:$KAFKA_NODE_PORT pytest test/test_e2e.py
