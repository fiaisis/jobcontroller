---
on: push

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Run pytest
        run: pytest . --ignore test/test_e2e.py

  e2e:
    runs-on: ubuntu-latest
    name: build example and deploy to minikube
    steps:
      - uses: actions/checkout@v2

      - name: Create archive-like folder
        run: |
          sudo mkdir -p /archive/NDXMARI/Instrument/data/cycle_22_5/
          sudo touch /archive/NDXMARI/Instrument/data/cycle_22_5/MAR28503.nxs

      - name: Create ceph-like folder
        run: |
          sudo mkdir -p /ceph/MARI/RBNumber/RB0/autoreduced

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Clone k8s repo
        uses: actions/checkout@v2
        with:
          repository: interactivereduction/k8s
          path: ~/k8s

      - name: Deploy the k8s local cluster version
        uses: arillso/action.playbook@master
        with:
          playbook: ~/k8s/ansible/deploy-dev-k8s-services.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/jobcontroller-test:${{ github.sha }}

      - name: Push new container image to the kubernetes cluster
        run: |
          kubectl set image -n ir deployment/jobcontroller jobcontroller=ghcr.io/interactivereduction/jobcontroller-test:${{ github.sha }}

      - name: Run e2e test
        run: |
          KAFKA_IP=$(minikube ip) pytest test/test_e2e.py
